{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
       "LogicAppNameStartStop": {
            "type": "string",
            "minLength": 3,
            "maxLength": 24
        },
        "LogicAppNameStatus": {
            "type": "string",
            "minLength": 3,
            "maxLength": 24
        },
        "AppServicePlanName": {
            "type": "string",
            "minLength": 3,
            "maxLength": 24
        },
        "AppServicePHPName": {
            "type": "string",
            "minLength": 3,
            "maxLength": 24
        },
        "ContainerGroupName": {
            "type": "string",
            "minLength": 3,
            "maxLength": 24
        },
        "principalId": {
            "type": "string"
        }
    },
    "variables": {
        "AppServicePHP-hostNameSslStates-Standard": "[concat(parameters('AppServicePHPName'), '.azurewebsites.net')]",
        "AppServicePHP-hostNameSslStates-Repository": "[concat(parameters('AppServicePHPName'), '.scm.azurewebsites.net')]",
        "AppServicePHP-ftp": "[concat(parameters('AppServicePHPName'), '/ftp')]",
        "AppServicePHP-scm": "[concat(parameters('AppServicePHPName'), '/scm')]",
        "AppServicePHP-web": "[concat(parameters('AppServicePHPName'), '/web')]",
        "AppServicePHP-publishingUsername": "[concat('$', parameters('AppServicePHPName'))]",
        "AppServicePHP-hostNameBindings": "[concat(parameters('AppServicePHPName'), '/', parameters('AppServicePHPName'), '.azurewebsites.net')]",
        "LogicAppNameStart-URI": "[concat('https://management.azure.com/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.ContainerInstance/containerGroups/', parameters('ContainerGroupName'), '/start?api-version=2021-09-01')]",
        "LogicAppNameStop-URI": "[concat('https://management.azure.com/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.ContainerInstance/containerGroups/', parameters('ContainerGroupName'), '/stop?api-version=2021-09-01')]",
        "LogicAppNameStatus-URI": "[concat('https://management.azure.com/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.ContainerInstance/containerGroups/', parameters('ContainerGroupName'), '?api-version=2021-09-01')]"
    },
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('LogicAppNameStartStop')]",
            "location": "[resourceGroup().location]", 
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "GET",
                                "relativePath": "/{action}"
                            }
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "HTTP": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "method": "POST",
                                        "uri": "[variables('LogicAppNameStart-URI')]"
                                    }
                                },
                                "Response": {
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "body": "@body('HTTP')",
                                        "headers": {
                                            "Content-type": "application/json"
                                        },
                                        "statusCode": 200
                                    }
                                }
                            },
                            "runAfter": {},
                            "expression": {
                                "or": [
                                    {
                                        "equals": [
                                            "@triggerOutputs()['relativePathParameters']['action']",
                                            "start"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_2": {
                            "actions": {
                                "HTTP_2": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                            "authentication": {
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "method": "POST",
                                        "uri": "[variables('LogicAppNameStop-URI')]"
                                    }
                                },
                                "Response_4": {
                                    "runAfter": {
                                        "HTTP_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "body": "@body('HTTP_2')",
                                        "statusCode": 200
                                    }
                                }
                            },
                            "runAfter": {},
                            "expression": {
                                "or": [
                                    {
                                        "equals": [
                                            "@triggerOutputs()['relativePathParameters']['action']",
                                            "stop"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",

            "name": "[parameters('LogicAppNameStatus')]",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "GET"
                            }
                        }
                    },
                    "actions": {
                        "HTTP": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "uri": "[variables('LogicAppNameStatus-URI')]"
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Status",
                                        "type": "string",
                                        "value": "@{body('Parse_JSON')}"
                                    }
                                ]
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('HTTP')",
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "location": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "properties": {
                                            "properties": {
                                                "containers": {
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "properties": {
                                                                "properties": {
                                                                    "environmentVariables": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string"
                                                                                },
                                                                                "value": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "name",
                                                                                "value"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "image": {
                                                                        "type": "string"
                                                                    },
                                                                    "instanceView": {
                                                                        "properties": {
                                                                            "currentState": {
                                                                                "properties": {
                                                                                        "detailStatus": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "startTime": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "state": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "events": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "count": {
                                                                                            "type": "integer"
                                                                                        },
                                                                                        "firstTimestamp": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "lastTimestamp": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "message": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "count",
                                                                                        "firstTimestamp",
                                                                                        "lastTimestamp",
                                                                                        "name",
                                                                                        "message",
                                                                                        "type"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "restartCount": {
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "ports": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "port": {
                                                                                    "type": "integer"
                                                                                },
                                                                                "protocol": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "protocol",
                                                                                "port"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "resources": {
                                                                        "properties": {
                                                                            "requests": {
                                                                                "properties": {
                                                                                    "cpu": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "memoryInGB": {
                                                                                        "type": "integer"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "volumeMounts": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "mountPath": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "name",
                                                                                "mountPath"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "name",
                                                            "properties"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "initContainers": {
                                                    "type": "array"
                                                },
                                                "instanceView": {
                                                    "properties": {
                                                        "events": {
                                                            "items": {
                                                                "properties": {
                                                                    "count": {
                                                                        "type": "integer"
                                                                    },
                                                                    "firstTimestamp": {
                                                                        "type": "string"
                                                                    },
                                                                    "lastTimestamp": {
                                                                        "type": "string"
                                                                    },
                                                                    "message": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "count",
                                                                    "firstTimestamp",
                                                                    "lastTimestamp",
                                                                    "name",
                                                                    "message",
                                                                    "type"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "state": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "ipAddress": {
                                                    "properties": {
                                                        "dnsNameLabel": {
                                                            "type": "string"
                                                        },
                                                        "dnsNameLabelReusePolicy": {
                                                            "type": "string"
                                                        },
                                                        "fqdn": {
                                                            "type": "string"
                                                        },
                                                        "ip": {
                                                            "type": "string"
                                                        },
                                                        "ports": {
                                                            "items": {
                                                                "properties": {
                                                                    "port": {
                                                                        "type": "integer"
                                                                    },
                                                                    "protocol": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "protocol",
                                                                    "port"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "type": {
                                                            "type": "string"
                                                        }
                                                    },
                                                "type": "object"
                                                },
                                                "osType": {
                                                    "type": "string"
                                                },
                                                "provisioningState": {
                                                    "type": "string"
                                                },
                                                "sku": {
                                                    "type": "string"
                                                },
                                                "volumes": {
                                                    "items": {
                                                        "properties": {
                                                            "azureFile": {
                                                                "properties": {
                                                                    "shareName": {
                                                                        "type": "string"
                                                                    },
                                                                    "storageAccountName": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "name",
                                                            "azureFile"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "type": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": "@variables('Status')",
                                "headers": {
                                    "Content-type": "application/json"
                                },
                                "statusCode": 200
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-03-01",
            "name": "[parameters('AppServicePlanName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "F1",
                "tier": "Free",
                "size": "F1",
                "family": "F",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "name": "[parameters('AppServicePHPName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('AppServicePlanName'))]"
            ],
            "kind": "app,linux",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[variables('AppServicePHP-hostNameSslStates-Standard')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[variables('AppServicePHP-hostNameSslStates-Repository')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('AppServicePlanName'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "vnetRouteAllEnabled": false,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "PHP|8.1",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": true,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 0
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "customDomainVerificationId": "",
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2022-03-01",
            "name": "[variables('AppServicePHP-ftp')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('AppServicePHPName'))]"
            ],
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2022-03-01",
            "name": "[variables('AppServicePHP-scm')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('AppServicePHPName'))]"
            ],
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2022-03-01",
            "name": "[variables('AppServicePHP-web')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('AppServicePHPName'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "PHP|8.1",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "[variables('AppServicePHP-publishingUsername')]",
                "scmType": "LocalGit",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": true,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.0",
                "ftpsState": "AllAllowed",
                "preWarmedInstanceCount": 0,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 0,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2022-03-01",
            "name": "[variables('AppServicePHP-hostNameBindings')]", 
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('AppServicePHPName'))]"
            ],
            "properties": {
                "siteName": "[parameters('AppServicePHPName')]",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[guid(resourceGroup().id)]",
            "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
                "principalId": "[parameters('principalId')]"
            }
        }
    ]
}
